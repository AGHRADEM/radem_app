- name: Grafana - create a default container
  community.docker.docker_container:
    name: "{{ grafana_docker_container_name }}"
    image: "grafana/grafana-oss"
    networks:
      - name: "{{ docker_network_name }}"
    published_ports:
      - "{{ grafana_port }}:3000"
    state: started

- name: Grafana - wait HTTP API become available
  ansible.builtin.uri:
    url: "{{ grafana_url }}/api/org"
    user: admin
    password: admin
    force_basic_auth: true
    method: "GET"
  register: "result_grafana_api"
  until: "result_grafana_api is success"
  retries: 12
  delay: 5

- name: Grafana - change admin password
  community.docker.docker_container_exec:
    container: "{{ grafana_docker_container_name }}"
    command: "grafana cli admin reset-admin-password {{ grafana_admin_password }}"
    chdir: /usr/share/grafana
  register: result
- name: Print debug info
  ansible.builtin.debug:
    msg: "{{ result }}"

- name: Grafana - create viewer user
  community.grafana.grafana_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_admin_user }}"
    url_password: "{{ grafana_admin_password }}"
    name: "Viewer user"
    login: "{{ grafana_viewer_user }}"
    password: "{{ grafana_viewer_password }}"
    email: "{{ grafana_viewer_user_email }}"
    is_admin: false
    state: present

- name: "Grafana - check if data source already exists: {{ datasource_name }}"
  ansible.builtin.uri:
    url: "{{ grafana_url }}/api/datasources/name/{{ datasource_name }}"
    user: "{{ grafana_admin_user }}"
    password: "{{ grafana_admin_password }}"
    force_basic_auth: true
    method: "GET"
    status_code: "200,404"
  register: "result_grafana_data_source_get"

- name: Print debug info
  ansible.builtin.debug:
    var: result_grafana_data_source_get

- name: "Grafana - open TCP port"
  ansible.posix.firewalld:
    service: grafana
    immediate: true
    permanent: true
    state: enabled
